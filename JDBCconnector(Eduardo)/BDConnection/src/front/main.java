/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package front;
import bdconnection.*;
import java.awt.Component;
import java.awt.Graphics;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.paint.Color;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;
import javax.swing.BorderFactory;
import javax.swing.border.LineBorder;

/**
 *
 * @author Gustavo
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    BDConnection bd = new BDConnection();
    public main() throws ClassNotFoundException, SQLException {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TextField1 = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextArea1 = new javax.swing.JTextArea();
        Button1 = new javax.swing.JButton();
        RadioButton1 = new javax.swing.JRadioButton();
        RadioButton2 = new javax.swing.JRadioButton();
        TextFieldLista = new javax.swing.JTextField();
        SubmitDeck = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField1ActionPerformed(evt);
            }
        });

        SearchButton.setText("Procurar");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        TextArea1.setEditable(false);
        TextArea1.setColumns(20);
        TextArea1.setRows(5);
        jScrollPane2.setViewportView(TextArea1);

        Button1.setText("jButton1");

        RadioButton1.setText("Deck");
        RadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButton1ActionPerformed(evt);
            }
        });

        RadioButton2.setText("Pasta");

        SubmitDeck.setText("OK");
        SubmitDeck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitDeckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TextFieldLista, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(RadioButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(RadioButton2)
                                        .addGap(53, 53, 53))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(SubmitDeck))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchButton)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton)
                    .addComponent(TextFieldLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RadioButton1)
                            .addComponent(RadioButton2))
                        .addGap(18, 18, 18)
                        .addComponent(SubmitDeck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField1ActionPerformed
        //pega a string para procurar
        String txt = this.TextField1.getText();
        //cria a string que guarda o resultado
        String rs = "";
        try {
            //pega o resultado formatado em string do BD
            rs = bd.getFormatedResult(txt);
            //coloca o resultado na area de texto
            TextArea1.setText(rs);
            //muda o fundo para branco
            TextField1.setBackground(java.awt.Color.white);
            
            //pega o set de resultados separados
            ResultSet set = bd.searchBy(txt);
            set.next();
            //coloca o nome do botao como o nome da carta
            Button1.setText(set.getString("nome"));
            //separa por tipo de carta
            switch(set.getString("tipo")){
                //se for um pokemon
                case "Pokemon":
                    Button1.setBackground(java.awt.Color.LIGHT_GRAY);
                    //muda a cor de acordo com o tipo de energia
                    switch(set.getString("energia")){
                        case "Fogo":
                            Button1.setBorder(new LineBorder(java.awt.Color.red,2));
                            break;
                        case "Agua":
                            Button1.setBorder(new LineBorder(java.awt.Color.blue,2));
                            break;
                        case "Planta":
                            Button1.setBorder(new LineBorder(java.awt.Color.GREEN,2));
                            break;
                        case "Eletrica":
                            Button1.setBorder(new LineBorder(java.awt.Color.yellow,2));
                            break;
                        case "Psiquica":
                            Button1.setBorder(new LineBorder(new java.awt.Color(130, 0, 115),2));
                            break;
                        case "Luta":
                            Button1.setBorder(new LineBorder(new java.awt.Color(201, 101, 0),2));
                            break;
                        case "Noturna":
                            Button1.setBorder(new LineBorder(java.awt.Color.DARK_GRAY,2));
                            break;
                        case "Metal":
                            Button1.setBorder(new LineBorder(java.awt.Color.GRAY,2));
                            break;
                        case "Fada":
                            Button1.setBorder(new LineBorder(new java.awt.Color(255, 80, 210),2));
                            break;
                    }
                    break;
                case "Apoiador":
                case "Item":
                case "Estadio":
                    Button1.setBorder(new LineBorder(java.awt.Color.BLACK,1));
                    Button1.setBackground(java.awt.Color.LIGHT_GRAY);
                    break;
                //se for uma carta de energia muda a cor de acordo com ela
                case "Energia":
                    Button1.setBorder(new LineBorder(java.awt.Color.BLACK,1));
                    switch(set.getString("energia")){
                        case "Fogo":
                            Button1.setBackground(java.awt.Color.red);
                            break;
                        case "Agua":
                            Button1.setBackground(java.awt.Color.blue);
                            break;
                        case "Planta":
                            Button1.setBackground(java.awt.Color.GREEN);
                            break;
                        case "Eletrica":
                            Button1.setBackground(java.awt.Color.yellow);
                            break;
                        case "Psiquica":
                            Button1.setBackground(new java.awt.Color(130, 0, 115));
                            break;
                        case "Luta":
                            Button1.setBackground(new java.awt.Color(201, 101, 0));
                            break;
                        case "Noturna":
                            Button1.setBackground(java.awt.Color.DARK_GRAY);
                            break;
                        case "Metal":
                            Button1.setBackground(java.awt.Color.GRAY);
                            break;
                        case "Fada":
                            Button1.setBackground(new java.awt.Color(255, 80, 210));
                            break;
                    }
            }
            
        } catch (SQLException ex) {
            System.out.println(ex);
            //se nao encontrou nada, mostra que nao encontrou
            TextArea1.setText("Nenhum resultado encontrado");
        }
        
    }//GEN-LAST:event_TextField1ActionPerformed


    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        //se o campo de pesquisa estiver vazio
        if("".equals(TextField1.getText())){
            //avisa que precisa ter algo escrito no input
            TextField1.setText("Input necessário!");
            TextField1.setBackground(new java.awt.Color((float) Color.LIGHTCORAL.getRed(),
                                             (float) Color.LIGHTCORAL.getGreen(),
                                             (float) Color.LIGHTCORAL.getBlue(),
                                             (float) Color.LIGHTCORAL.getOpacity()));
        }else{
            TextField1ActionPerformed(evt);
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void RadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadioButton1ActionPerformed

    private void SubmitDeckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitDeckActionPerformed
        //pega o nome do deck
        String nomeDeck = TextFieldLista.getText();
        try{
            //se o botao de deck estiver selecionado
            if(RadioButton1.isSelected())
                //chama a funcao pra adicionar deck
                bd.addDeck(nomeDeck, "deck");
            //se o botao de pasta estiver selecionado
            else if(RadioButton2.isSelected())
                //chama a funcao pra adicionar pasta
                bd.addDeck(nomeDeck, "pasta");
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_SubmitDeckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new main().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button1;
    private javax.swing.JRadioButton RadioButton1;
    private javax.swing.JRadioButton RadioButton2;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton SubmitDeck;
    private javax.swing.JTextArea TextArea1;
    private javax.swing.JTextField TextField1;
    private javax.swing.JTextField TextFieldLista;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
